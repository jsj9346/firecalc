{"ast":null,"code":"var _jsxFileName = \"/Users/jeongseungjin/firecalc/src/dashboard/Table.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Table = ({\n  tableData,\n  headingColumns,\n  title,\n  breakOn = 'medium'\n}) => {\n  let tableClass = 'table-container__table';\n\n  if (breakOn === 'small') {\n    tableClass += ' table-container__table--break-sm';\n  } else if (breakOn === 'medium') {\n    tableClass += ' table-container__table--break-md';\n  } else if (breakOn === 'large') {\n    tableClass += ' table-container__table--break-lg';\n  }\n\n  const data = tableData.map((row, index) => {\n    let rowData = [];\n    let i = 0;\n\n    for (const key in row) {\n      rowData.push({\n        key: headingColumns[i],\n        val: row[key]\n      });\n      i++;\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"tr\", {\n      children: rowData.map((data, index) => /*#__PURE__*/_jsxDEV(\"td\", {\n        \"data-heading\": data.key,\n        children: data.val\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 37\n      }, this))\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 12\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"table-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"table-container__title\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: tableClass,\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: headingColumns.map((col, index) => /*#__PURE__*/_jsxDEV(\"th\", {\n            children: col\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: data\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Table;\nTable.propTypes = {\n  tableData: PropTypes.arrayOf(PropTypes.object).isRequired,\n  headingColumns: PropTypes.arrayOf(PropTypes.string).isRequired,\n  title: PropTypes.string.isRequired,\n  breakOn: PropTypes.oneOf(['small', 'medium', 'large'])\n};\nexport default Table;\n\nvar _c;\n\n$RefreshReg$(_c, \"Table\");","map":{"version":3,"sources":["/Users/jeongseungjin/firecalc/src/dashboard/Table.js"],"names":["React","PropTypes","Table","tableData","headingColumns","title","breakOn","tableClass","data","map","row","index","rowData","i","key","push","val","col","propTypes","arrayOf","object","isRequired","string","oneOf"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;;AAEA,MAAMC,KAAK,GAAG,CAAC;AAAEC,EAAAA,SAAF;AAAaC,EAAAA,cAAb;AAA6BC,EAAAA,KAA7B;AAAoCC,EAAAA,OAAO,GAAG;AAA9C,CAAD,KAA8D;AAC1E,MAAIC,UAAU,GAAG,wBAAjB;;AAEA,MAAGD,OAAO,KAAK,OAAf,EAAwB;AACtBC,IAAAA,UAAU,IAAI,mCAAd;AACD,GAFD,MAEM,IAAGD,OAAO,KAAK,QAAf,EAAyB;AAC7BC,IAAAA,UAAU,IAAI,mCAAd;AACD,GAFK,MAEA,IAAGD,OAAO,KAAK,OAAf,EAAwB;AAC5BC,IAAAA,UAAU,IAAI,mCAAd;AACD;;AAED,QAAMC,IAAI,GAAGL,SAAS,CAACM,GAAV,CAAc,CAACC,GAAD,EAAMC,KAAN,KAAgB;AACzC,QAAIC,OAAO,GAAG,EAAd;AACA,QAAIC,CAAC,GAAG,CAAR;;AAEA,SAAI,MAAMC,GAAV,IAAiBJ,GAAjB,EAAsB;AACpBE,MAAAA,OAAO,CAACG,IAAR,CAAa;AACXD,QAAAA,GAAG,EAAEV,cAAc,CAACS,CAAD,CADR;AAEXG,QAAAA,GAAG,EAAEN,GAAG,CAACI,GAAD;AAFG,OAAb;AAIAD,MAAAA,CAAC;AACF;;AAED,wBAAO;AAAA,gBACJD,OAAO,CAACH,GAAR,CAAY,CAACD,IAAD,EAAOG,KAAP,kBAAiB;AAAgB,wBAAcH,IAAI,CAACM,GAAnC;AAAA,kBAAyCN,IAAI,CAACQ;AAA9C,SAASL,KAAT;AAAA;AAAA;AAAA;AAAA,cAA7B;AADI,OAASA,KAAT;AAAA;AAAA;AAAA;AAAA,YAAP;AAGD,GAfY,CAAb;AAiBA,sBACE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,wBAAf;AAAA,6BACE;AAAA,kBAAKN;AAAL;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAIE;AAAO,MAAA,SAAS,EAAEE,UAAlB;AAAA,8BACE;AAAA,+BACE;AAAA,oBACGH,cAAc,CAACK,GAAf,CAAmB,CAACQ,GAAD,EAAMN,KAAN,kBAClB;AAAA,sBAAiBM;AAAjB,aAASN,KAAT;AAAA;AAAA;AAAA;AAAA,kBADD;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAQE;AAAA,kBACGH;AADH;AAAA;AAAA;AAAA;AAAA,cARF;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD,CA/CD;;KAAMN,K;AAiDNA,KAAK,CAACgB,SAAN,GAAkB;AAChBf,EAAAA,SAAS,EAAEF,SAAS,CAACkB,OAAV,CAAkBlB,SAAS,CAACmB,MAA5B,EAAoCC,UAD/B;AAEhBjB,EAAAA,cAAc,EAAEH,SAAS,CAACkB,OAAV,CAAkBlB,SAAS,CAACqB,MAA5B,EAAoCD,UAFpC;AAGhBhB,EAAAA,KAAK,EAAEJ,SAAS,CAACqB,MAAV,CAAiBD,UAHR;AAIhBf,EAAAA,OAAO,EAAEL,SAAS,CAACsB,KAAV,CAAgB,CAAC,OAAD,EAAU,QAAV,EAAoB,OAApB,CAAhB;AAJO,CAAlB;AAOA,eAAerB,KAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Table = ({ tableData, headingColumns, title, breakOn = 'medium' }) => {\n  let tableClass = 'table-container__table';\n\n  if(breakOn === 'small') {\n    tableClass += ' table-container__table--break-sm';\n  }else if(breakOn === 'medium') {\n    tableClass += ' table-container__table--break-md';\n  }else if(breakOn === 'large') {\n    tableClass += ' table-container__table--break-lg';\n  }\n\n  const data = tableData.map((row, index) => {\n    let rowData = [];\n    let i = 0;\n\n    for(const key in row) {\n      rowData.push({\n        key: headingColumns[i],\n        val: row[key]\n      });\n      i++;\n    }\n\n    return <tr key={index}>\n      {rowData.map((data, index) => <td key={index} data-heading={data.key}>{data.val}</td>)}\n    </tr>\n  });\n\n  return(\n    <div className=\"table-container\">\n      <div className=\"table-container__title\">\n        <h2>{title}</h2>\n      </div>\n      <table className={tableClass}>\n        <thead>\n          <tr>\n            {headingColumns.map((col, index) => (\n              <th key={index}>{col}</th>\n            ))}\n          </tr>\n        </thead>\n        <tbody>\n          {data}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n\nTable.propTypes = {\n  tableData: PropTypes.arrayOf(PropTypes.object).isRequired,\n  headingColumns: PropTypes.arrayOf(PropTypes.string).isRequired,\n  title: PropTypes.string.isRequired,\n  breakOn: PropTypes.oneOf(['small', 'medium', 'large']) \n}\n\nexport default Table;"]},"metadata":{},"sourceType":"module"}